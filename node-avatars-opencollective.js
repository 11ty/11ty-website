const slugify = require("slugify");
const fs = require("fs-extra");
const eleventyImg = require("@11ty/eleventy-img");

eleventyImg.concurrency = 5;

async function fetch(name, imageUrl) {
	if(!name || !imageUrl) {
		return;
	}

	let dir = `./avatars/opencollective/`;
	await fs.ensureDir(dir);

	let stats = await eleventyImg(imageUrl, {
		// formats: ["webp", "jpeg"],
		formats: ["jpeg"],
		widths: [90],
		urlPath: "/img/avatars/opencollective/",
		outputDir: "img/avatars/opencollective/",
		cacheOptions: {
			duration: "7d",
		}
	});

	let slug = slugify(name).toLowerCase();
	let path = `${dir}${slug}.json`;
	stats.slug = slug;
	await fs.writeFile(path, JSON.stringify(stats, null, 2));
	return stats;
}

(async function() {
	let promises = [];
	let redirects = [
		"# Careful! This file is generated by node-avatars-opencollective.js",
	];

	let getOpenCollectiveData = require("./_data/opencollective");
	let opencollective = await getOpenCollectiveData();
	for(let supporter of opencollective.supporters) {
		// / https://levelup-styleguide.netlify.com/ 200!
		promises.push(fetch(supporter.name, supporter.image));
	}

	let all = await Promise.all(promises);
	for(let stats of all) {
		if(stats) {
			redirects.push(`/img/avatars/opencollective/${stats.slug}.jpg ${stats.jpeg[0].url} 200!`);
		}
	}
	await fs.writeFile("./_redirects", redirects.join("\n"));
})();
