{% set tabid %}tab-{% uid %}{% endset %}
<div class="codetitle codetitle-right-md">eleventy.config.js</div>
<is-land on:visible import="/js/seven-minute-tabs.js">
<seven-minute-tabs class="tabs-flush" persist sync>
  {% renderFile "./src/_includes/syntax-chooser-tablist.11ty.js", {id: tabid, only: "jsesm,jscjs"} %}
  <div id="{{ tabid }}-jsesm" role="tabpanel">
{% set codeBlock %}{% raw %}
import { HtmlBasePlugin } from "@11ty/eleventy";

export default function (eleventyConfig) {
	eleventyConfig.addPlugin(HtmlBasePlugin, {
		// The base URL: defaults to Path Prefix
		baseHref: eleventyConfig.pathPrefix,

		// But you could use a full URL here too:
		// baseHref: "http://example.com/"

		// Comma separated list of output file extensions to apply
		// our transform to. Use `false` to opt-out of the transform.
		extensions: "html",
	});
}
{% endraw %}{% endset %}
{{ codeBlock | highlight("js") | safe }}
  </div>
  <div id="{{ tabid }}-jscjs" role="tabpanel">
{% set codeBlock %}{% raw %}
module.exports = async function (eleventyConfig) {
	const { HtmlBasePlugin } = await import("@11ty/eleventy");

	eleventyConfig.addPlugin(HtmlBasePlugin, {
		// The base URL: defaults to Path Prefix
		baseHref: eleventyConfig.pathPrefix,

		// But you could use a full URL here too:
		// baseHref: "http://example.com/"

		// Comma separated list of output file extensions to apply
		// our transform to. Use `false` to opt-out of the transform.
		extensions: "html",
	});
}
{% endraw %}{% endset %}
{{ codeBlock | highlight("js") | safe }}
  </div>
</seven-minute-tabs>
</is-land>