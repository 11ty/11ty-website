<script webc:setup>
function getIconHtml(url) {
	if(url) {
		return indieavatar(url, 'sites-screenshot sites-icon-auto');
	}
}
async function getScreenshotStyle(url, iconUrl) {
	let colors = await getImageColorsForUrl(iconUrl || url);
	let styles = [];
	if(colors.length) {
		let filteredColors = colors.map(entry => entry.colorjs).sort((a, b) => {
			return (b.oklch.l + b.oklch.c) - (a.oklch.l + a.oklch.c);
		});

		styles.push(`--card-primary: ${filteredColors[0].toString({format: "hex"})};`);

		if(iconUrl) {
			styles.push(`--card-background: linear-gradient(${colors.slice(0, 3).map(entry => entry.background).join(',')})`);
		}
	}
	return styles.join(";");
}
</script>
<style webc:scoped>
.metadata {
	white-space: nowrap;
}
</style>
<link rel="stylesheet" href="site-entry.css">

<div class="sites-site-vert">
	<a :href="url" class="elv-externalexempt" :title="name || false" :style="getScreenshotStyle(url, iconUrl)">
		<div class="sites-screenshot-container" @html="imageHtml || getIconHtml(iconUrl) || getScreenshotHtml(undefined, screenshotUrl || url, null, size)"></div>
		<span class="sites-site-name--nowrap">
			<span webc:nokeep @html="indieavatar(url, 'avatar-large')"></span>
			<span webc:nokeep @text="name || url"></span>
			<em webc:if="using" @text="`(${using})`"></em>
			<span class="metadata" webc:if="date" @text="`(${date.split('-').shift()})`"></span>
			<span class="metadata" webc:if="medialength" @text="`⏱ ${medialength}`"></span>
		</span>
	</a>
</div>